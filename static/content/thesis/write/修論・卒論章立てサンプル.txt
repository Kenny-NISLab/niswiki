● 題目：車載システム向けストリームデータ処理の提案と評価 
● 著者：同志社 太郎


● 概要：
　・車載システムでは車載データ増加に伴うアプリケーションの開発コスト削減を目的とし，ストリームデータ処理として車載データ処理の統合管理を検討
　・従来のストリームデータ処理は一般的に汎用システムを想定しており，組込みシステムである車載システム上での実行が困難
　・車載システム向けのストリームデータ処理を提案
　　- 静的に定義されたクエリ及びプラットフォームの情報に従って，ストリームデータ処理エンジンのソースコードを生成
　　- 様々なプラットフォームで実行可能にすると共に，バイナリファイルサイズを最小限に抑制
　・提案方式を制御系及び情報系ECUを想定した組込み環境で評価し，有用性を示す 


● 1．はじめに
　車載データ統合と、ストリーム処理の車載システム適用の必要性について述べる。
　そして従来の汎用システム向けのストリーム処理の問題点と、
　車載システム向けのストリーム処理の提案について述べる。

● 2. ストリーム処理の車載システム適用
　2.1 車載システムについて
　　車載システムでは様々なプラットフォーム(ハードウェア/OS）が存在する。
　　またリソース制約が厳しいことを説明する。
　
　2.2 汎用システム向けのストリーム処理
　　ストリーム処理エンジンは、汎用システムすなわち特定プラットフォームでコンパイル、実行可能であるように設計されている。
　　またストリーム処理エンジンはプラットフォームに事前にインストールし、インストール後にクエリが登録される
　　
　2.3 ストリーム処理の車載システム適用に向けた課題
　　組込み環境における様々なプラットフォームでのコンパイル、実行に対応することが難しい。
　　クエリが後から登録されることを想定するため、不必要なコードがコンパイルされる。

● 3. 車載システム向けストリーム処理の提案
　3.1 提案方式の概要
　　ストリーム処理のランタイムをコンポーネントとして構成する。
　　ユーザ定義のクエリやプラットフォームの情報に従って、必要なコンポーネントを選択する。
　　必要なコンポーネントのみコンパイルされるため、様々なプラットフォームで実行可能にすると共に，
　　バイナリファイルサイズを最小限に抑制することが可能になる。
　
　3.2 提案方式の詳細
　　3.2.1 ストリーム処理のコンポーネント構成
　　　ストリーム処理の各コンポーネントはグループ毎に共通のインタフェースを通して呼び出される．
　　　コンポーネントのグループとしては、オペレータ、ストリーム、スケジューラ、データ通信等を挙げられる。
　　
　　3.2.2 ストリーム処理起動部のソースコード生成
　　　ユーザ定義のクエリ及びプラットフォームの情報から、必要なランタイム・コンポーネントを決定する。
　　　そしてそのコンポーネントを初期化するランタイム起動部のソースコードを生成する。
　　
　　3.2.3 ストリーム処理のバイナリコード生成
　　　ランタイム起動部と、ランタイム・コンポーネントをリンクし、ランタイムのバイナリコードを生成する。

● 4. 車載システム向けストリーム処理の評価
　4.1 評価方法、環境
　　情報系及び制御系ECUを想定した組込み環境で評価する(実際はRobocar、Alteraボード)。
　　様々なハードウェア/OSで動作可能であること。メモリ使用量が少ないことを示す。
　
　4.2 RoboCar上の評価
　　RoboCar(情報系ECUを想定した環境)で評価する。
　　機能及び性能面で動作可能であることを示す。
　　また汎用システム向けストリーム処理に対して、メモリ使用量が少ないことを示す。

　4.3 Alteraボード上の評価
　　Alteraボード(制御系ECUを想定した環境)で評価
　　汎用システム向けストリーム処理では、機能面でも動作が難しい一方で、
　　提案方式では機能及び性能面で動作可能であることを示す。

● 5. 関連研究
　汎用システム向けストリーム処理、組込みシステム向けストリーム処理、
　その他車載システムに用いるデータ処理・管理ミドル（組込みDB、Matlab/realtime workshop)を挙げ、提案方式との違いを示す。

● おわりに
　まとめと今後の課題を述べる。
